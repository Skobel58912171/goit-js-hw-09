{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAASC,SAASC,cAAc,SA4BtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAIpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAtCPL,EAAOa,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBACF,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBX,MAAOe,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACfC,EAAUC,OAAOF,EAAOG,OACxBC,EAASF,OAAOJ,EAAMK,OACtBE,EAAQH,OAAOH,EAAKI,OAC1BG,QAAQC,IAAIP,EAAOG,OACnBG,QAAQC,IAAIT,EAAMK,OAClBG,QAAQC,IAAIR,EAAKI,OACjB,IAAIK,EAAYJ,EACVK,EAAU9B,EAAO+B,iBACvBD,EAAQE,UAAW,EACnB,IAAK,IAAIC,EAAI,EAAGA,GAAKX,EAASW,GAAK,EACjC9B,EAAc8B,EAAGJ,GACdK,MAAK,SAAAC,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MACjBP,EAAAsC,OAAOC,QAAQ,uBAAwCC,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,M,IAE9DkC,OAAM,SAAAJ,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MAClBP,EAAAsC,OAAOI,QAAQ,sBAAqCF,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,M,IAE9DwB,GAAaH,EAEfI,EAAQE,UAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n// console.dir(formEl)\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.target.elements;\n  const amountV = Number(amount.value);\n  const delayV = Number(delay.value);\n  const stepV = Number(step.value);\n  console.log(amount.value);\n  console.log(delay.value);\n  console.log(step.value);\n  let delayTime = delayV;\n  const formBtn = formEl.lastElementChild;\n  formBtn.disabled = false;\n  for (let i = 1; i <= amountV; i += 1) {\n    createPromise(i, delayTime)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayTime += stepV;\n  }\n  formBtn.disabled = true;\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Notify.success;\n        resolve({ position, delay });\n        // Fulfillres\n      } else {\n        // Notify.failure;\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","_elements","target","elements","delay1","step","amount","amountV","Number","value","delayV","stepV","console","log","delayTime","formBtn","lastElementChild","disabled","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.3ad56971.js.map"}